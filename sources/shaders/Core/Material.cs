// <auto-generated>
// Do not edit this file yourself!
//
// This code was generated by Paradox Shader Mixin Code Generator.
// To generate it yourself, please install SiliconStudio.Paradox.VisualStudio.Package .vsix
// and re-save the associated .pdxfx.
// </auto-generated>

using System;
using SiliconStudio.Core;
using SiliconStudio.Paradox.Effects;
using SiliconStudio.Paradox.Graphics;
using SiliconStudio.Paradox.Shaders;
using SiliconStudio.Core.Mathematics;
using Buffer = SiliconStudio.Paradox.Graphics.Buffer;

namespace SiliconStudio.Paradox.Effects
{
    public static partial class MaterialKeys
    {
        public static readonly ParameterKey<Color4> ColorValue = ParameterKeys.New<Color4>();
        public static readonly ParameterKey<Color4> ColorValue1 = ParameterKeys.New<Color4>();
        public static readonly ParameterKey<Color4> ColorValue2 = ParameterKeys.New<Color4>();
        public static readonly ParameterKey<Color4> ColorValue3 = ParameterKeys.New<Color4>();
        public static readonly ParameterKey<Color4> ColorValue4 = ParameterKeys.New<Color4>();
        public static readonly ParameterKey<Color4> ColorValue5 = ParameterKeys.New<Color4>();
        public static readonly ParameterKey<Color4> ColorValue6 = ParameterKeys.New<Color4>();
        public static readonly ParameterKey<Color4> ColorValue7 = ParameterKeys.New<Color4>();
        public static readonly ParameterKey<Color4> DiffuseColorValue = ParameterKeys.New<Color4>(new Color4(1.0f,1.0f,1.0f,1.0f));
        public static readonly ParameterKey<Color4> SpecularColorValue = ParameterKeys.New<Color4>(new Color4(0.0f,0.0f,0.0f,0.0f));
        public static readonly ParameterKey<Color4> AmbientColorValue = ParameterKeys.New<Color4>(new Color4(0.0f,0.0f,0.0f,0.0f));
        public static readonly ParameterKey<Color4> EmissiveColorValue = ParameterKeys.New<Color4>(new Color4(0.0f,0.0f,0.0f,0.0f));
        public static readonly ParameterKey<Color4> ReflectionColorValue = ParameterKeys.New<Color4>(new Color4(0.0f,0.0f,0.0f,0.0f));
        public static readonly ParameterKey<Vector4> BumpValue = ParameterKeys.New<Vector4>(new Vector4(0.0f,0.0f,0.0f,0.0f));
        public static readonly ParameterKey<Vector4> NormalMapValue = ParameterKeys.New<Vector4>(new Vector4(0.0f,0.0f,0.0f,0.0f));
        public static readonly ParameterKey<Vector4> DisplacementValue = ParameterKeys.New<Vector4>(new Vector4(0.0f,0.0f,0.0f,0.0f));
        public static readonly ParameterKey<float> TransparencyValue = ParameterKeys.New<float>(1.0f);
        public static readonly ParameterKey<float> SpecularPower = ParameterKeys.New<float>();
        public static readonly ParameterKey<float> SpecularPowerScaled = ParameterKeys.New<float>();
        public static readonly ParameterKey<float> SpecularIntensity = ParameterKeys.New<float>();
        public static readonly ParameterKey<float> Roughness = ParameterKeys.New<float>();
        public static readonly ParameterKey<float> Reflectance = ParameterKeys.New<float>();
        public static readonly ParameterKey<float> CookTorranceReflection = ParameterKeys.New<float>();
    }
}

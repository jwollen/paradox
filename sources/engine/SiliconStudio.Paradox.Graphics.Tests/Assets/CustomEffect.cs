// <auto-generated>
// Do not edit this file yourself!
//
// This code was generated by Paradox Shader Mixin Code Generator.
// To generate it yourself, please install SiliconStudio.Paradox.VisualStudio.Package .vsix
// and re-save the associated .pdxfx.
// </auto-generated>

using System;
using SiliconStudio.Core;
using SiliconStudio.Paradox.Effects;
using SiliconStudio.Paradox.Graphics;
using SiliconStudio.Paradox.Shaders;
using SiliconStudio.Core.Mathematics;
using Buffer = SiliconStudio.Paradox.Graphics.Buffer;

namespace SiliconStudio.Paradox.Graphics.Tests
{
    internal static partial class ShaderMixins
    {
        internal partial class CustomSubEffect  : IShaderMixinBuilder
        {
            public void Generate(ShaderMixinSourceTree mixin, ShaderMixinContext context)
            {
                context.CloneParentMixinToCurrent();
                if (context.GetParam(CustomShaderKeys.SwitchEffectLevel) < 10)
                {
                    context.Mixin(mixin, "CustomShader");
                }
                else
                {
                    context.Mixin(mixin, "CustomShader2");
                }
            }

            [ModuleInitializer]
            internal static void __Initialize__()

            {
                ShaderMixinManager.Register("CustomSubEffect", new CustomSubEffect());
            }
        }
    }
    internal static partial class ShaderMixins
    {
        internal partial class CustomEffect  : IShaderMixinBuilder
        {
            public void Generate(ShaderMixinSourceTree mixin, ShaderMixinContext context)
            {
                context.Mixin(mixin, "CustomShader");

                {
                    var __subMixin = new ShaderMixinSourceTree() { Name = "CustomSubEffect" };
                    context.BeginChild(__subMixin);
                    context.Mixin(__subMixin, "CustomSubEffect");
                    context.EndChild();
                }
            }

            [ModuleInitializer]
            internal static void __Initialize__()

            {
                ShaderMixinManager.Register("CustomEffect", new CustomEffect());
            }
        }
    }
}


// Copyright (c) 2011 Silicon Studio
// AUTOGENERATED, do not modify!

using System;

namespace SiliconStudio.Paradox.Rendering
{
    /// <summary>
    /// Base class for <see cref="ParameterDynamicValue"/>.
    /// </summary>
    public abstract class ParameterDynamicBase
    {
        protected ParameterDynamicBase() : this(true)
        {
        }

        protected ParameterDynamicBase(bool autoCheckDependencies)
        {
            AutoCheckDependencies = autoCheckDependencies;
        }

        public bool AutoCheckDependencies { get; set; }

        public int SizeInBytes { get; set; }

        public ParameterKey[] Dependencies { get; set; }

        public ParameterKey Target { get; set; }

        internal abstract Delegate SourceDelegate { get; }

        internal abstract void GetValue(ParameterCollection.InternalValue result);
    }

    public delegate void ParameterUpdateDelegate1<TCast1, T>(ref TCast1 param1, ref T output);
    public delegate void ParameterUpdateDelegate2<TCast1, TCast2, T>(ref TCast1 param1, ref TCast2 param2, ref T output);
    public delegate void ParameterUpdateDelegate3<TCast1, TCast2, TCast3, T>(ref TCast1 param1, ref TCast2 param2, ref TCast3 param3, ref T output);
    public delegate void ParameterUpdateDelegate4<TCast1, TCast2, TCast3, TCast4, T>(ref TCast1 param1, ref TCast2 param2, ref TCast3 param3, ref TCast4 param4, ref T output);
    public delegate void ParameterUpdateDelegate5<TCast1, TCast2, TCast3, TCast4, TCast5, T>(ref TCast1 param1, ref TCast2 param2, ref TCast3 param3, ref TCast4 param4, ref TCast5 param5, ref T output);
    public delegate void ParameterUpdateDelegate6<TCast1, TCast2, TCast3, TCast4, TCast5, TCast6, T>(ref TCast1 param1, ref TCast2 param2, ref TCast3 param3, ref TCast4 param4, ref TCast5 param5, ref TCast6 param6, ref T output);

    /// <summary>
    /// Base class for <see cref="ParameterDynamicValue{T}"/>.
    /// </summary>
    public abstract class ParameterDynamicValue : ParameterDynamicBase
    {
        public static ParameterDynamicValue<T> New<T, T1>(ParameterKey<T1> param1, ParameterUpdateDelegate1<T1, T> update, bool autoCheckDependencies = true)
/*            where T : struct
            where T1 : struct
*/
        {
            return new ParameterDynamicValue1<T, T1, T, T1>(param1, update, autoCheckDependencies);
        }
        public static ParameterDynamicValue<T> New<T, T1, T2>(ParameterKey<T1> param1, ParameterKey<T2> param2, ParameterUpdateDelegate2<T1, T2, T> update, bool autoCheckDependencies = true)
/*            where T : struct
            where T1 : struct
            where T2 : struct
*/
        {
            return new ParameterDynamicValue2<T, T1, T2, T, T1, T2>(param1, param2, update, autoCheckDependencies);
        }
        public static ParameterDynamicValue<T> New<T, T1, T2, T3>(ParameterKey<T1> param1, ParameterKey<T2> param2, ParameterKey<T3> param3, ParameterUpdateDelegate3<T1, T2, T3, T> update, bool autoCheckDependencies = true)
/*            where T : struct
            where T1 : struct
            where T2 : struct
            where T3 : struct
*/
        {
            return new ParameterDynamicValue3<T, T1, T2, T3, T, T1, T2, T3>(param1, param2, param3, update, autoCheckDependencies);
        }
        public static ParameterDynamicValue<T> New<T, T1, T2, T3, T4>(ParameterKey<T1> param1, ParameterKey<T2> param2, ParameterKey<T3> param3, ParameterKey<T4> param4, ParameterUpdateDelegate4<T1, T2, T3, T4, T> update, bool autoCheckDependencies = true)
/*            where T : struct
            where T1 : struct
            where T2 : struct
            where T3 : struct
            where T4 : struct
*/
        {
            return new ParameterDynamicValue4<T, T1, T2, T3, T4, T, T1, T2, T3, T4>(param1, param2, param3, param4, update, autoCheckDependencies);
        }
        public static ParameterDynamicValue<T> New<T, T1, T2, T3, T4, T5>(ParameterKey<T1> param1, ParameterKey<T2> param2, ParameterKey<T3> param3, ParameterKey<T4> param4, ParameterKey<T5> param5, ParameterUpdateDelegate5<T1, T2, T3, T4, T5, T> update, bool autoCheckDependencies = true)
/*            where T : struct
            where T1 : struct
            where T2 : struct
            where T3 : struct
            where T4 : struct
            where T5 : struct
*/
        {
            return new ParameterDynamicValue5<T, T1, T2, T3, T4, T5, T, T1, T2, T3, T4, T5>(param1, param2, param3, param4, param5, update, autoCheckDependencies);
        }
        public static ParameterDynamicValue<T> New<T, T1, T2, T3, T4, T5, T6>(ParameterKey<T1> param1, ParameterKey<T2> param2, ParameterKey<T3> param3, ParameterKey<T4> param4, ParameterKey<T5> param5, ParameterKey<T6> param6, ParameterUpdateDelegate6<T1, T2, T3, T4, T5, T6, T> update, bool autoCheckDependencies = true)
/*            where T : struct
            where T1 : struct
            where T2 : struct
            where T3 : struct
            where T4 : struct
            where T5 : struct
            where T6 : struct
*/
        {
            return new ParameterDynamicValue6<T, T1, T2, T3, T4, T5, T6, T, T1, T2, T3, T4, T5, T6>(param1, param2, param3, param4, param5, param6, update, autoCheckDependencies);
        }

/*        public static ParameterDynamicValue<T> NewCast<T, T1, TCast, TCast1>(ParameterKey<T1> param1, ParameterUpdateDelegate1<TCast1, TCast> update)
            where T : struct
            where TCast : struct
            where T1 : struct
            where TCast1 : struct
        {
            return new ParameterDynamicValue1<T, T1, TCast, TCast1>(param1, update);
        }
        public static ParameterDynamicValue<T> NewCast<T, T1, T2, TCast, TCast1, TCast2>(ParameterKey<T1> param1, ParameterKey<T2> param2, ParameterUpdateDelegate2<TCast1, TCast2, TCast> update)
            where T : struct
            where TCast : struct
            where T1 : struct
            where TCast1 : struct
            where T2 : struct
            where TCast2 : struct
        {
            return new ParameterDynamicValue2<T, T1, T2, TCast, TCast1, TCast2>(param1, param2, update);
        }
        public static ParameterDynamicValue<T> NewCast<T, T1, T2, T3, TCast, TCast1, TCast2, TCast3>(ParameterKey<T1> param1, ParameterKey<T2> param2, ParameterKey<T3> param3, ParameterUpdateDelegate3<TCast1, TCast2, TCast3, TCast> update)
            where T : struct
            where TCast : struct
            where T1 : struct
            where TCast1 : struct
            where T2 : struct
            where TCast2 : struct
            where T3 : struct
            where TCast3 : struct
        {
            return new ParameterDynamicValue3<T, T1, T2, T3, TCast, TCast1, TCast2, TCast3>(param1, param2, param3, update);
        }
        public static ParameterDynamicValue<T> NewCast<T, T1, T2, T3, T4, TCast, TCast1, TCast2, TCast3, TCast4>(ParameterKey<T1> param1, ParameterKey<T2> param2, ParameterKey<T3> param3, ParameterKey<T4> param4, ParameterUpdateDelegate4<TCast1, TCast2, TCast3, TCast4, TCast> update)
            where T : struct
            where TCast : struct
            where T1 : struct
            where TCast1 : struct
            where T2 : struct
            where TCast2 : struct
            where T3 : struct
            where TCast3 : struct
            where T4 : struct
            where TCast4 : struct
        {
            return new ParameterDynamicValue4<T, T1, T2, T3, T4, TCast, TCast1, TCast2, TCast3, TCast4>(param1, param2, param3, param4, update);
        }
        public static ParameterDynamicValue<T> NewCast<T, T1, T2, T3, T4, T5, TCast, TCast1, TCast2, TCast3, TCast4, TCast5>(ParameterKey<T1> param1, ParameterKey<T2> param2, ParameterKey<T3> param3, ParameterKey<T4> param4, ParameterKey<T5> param5, ParameterUpdateDelegate5<TCast1, TCast2, TCast3, TCast4, TCast5, TCast> update)
            where T : struct
            where TCast : struct
            where T1 : struct
            where TCast1 : struct
            where T2 : struct
            where TCast2 : struct
            where T3 : struct
            where TCast3 : struct
            where T4 : struct
            where TCast4 : struct
            where T5 : struct
            where TCast5 : struct
        {
            return new ParameterDynamicValue5<T, T1, T2, T3, T4, T5, TCast, TCast1, TCast2, TCast3, TCast4, TCast5>(param1, param2, param3, param4, param5, update);
        }
        public static ParameterDynamicValue<T> NewCast<T, T1, T2, T3, T4, T5, T6, TCast, TCast1, TCast2, TCast3, TCast4, TCast5, TCast6>(ParameterKey<T1> param1, ParameterKey<T2> param2, ParameterKey<T3> param3, ParameterKey<T4> param4, ParameterKey<T5> param5, ParameterKey<T6> param6, ParameterUpdateDelegate6<TCast1, TCast2, TCast3, TCast4, TCast5, TCast6, TCast> update)
            where T : struct
            where TCast : struct
            where T1 : struct
            where TCast1 : struct
            where T2 : struct
            where TCast2 : struct
            where T3 : struct
            where TCast3 : struct
            where T4 : struct
            where TCast4 : struct
            where T5 : struct
            where TCast5 : struct
            where T6 : struct
            where TCast6 : struct
        {
            return new ParameterDynamicValue6<T, T1, T2, T3, T4, T5, T6, TCast, TCast1, TCast2, TCast3, TCast4, TCast5, TCast6>(param1, param2, param3, param4, param5, param6, update);
        }
*/

        public ParameterDynamicValue Clone()
        {
            // TODO: Optimize
            return (ParameterDynamicValue)this.MemberwiseClone();
        }
    }


    /// <summary>
    /// Describes a dynamic value with no input.
    /// </summary>
    public abstract class ParameterDynamicValue<T> : ParameterDynamicValue
    {
    }

    /// <summary>
    /// Describes a dynamic value with 1 inputs.
    /// </summary>
    /// <typeparam name="T"></typeparam>
    /// <typeparam name="T1">The type of the 1.</typeparam>
    internal class ParameterDynamicValue1<T, T1, TCast, TCast1> : ParameterDynamicValue<T> 
/*        where T : struct 
        where TCast : struct
        where T1 : struct
        where TCast1 : struct
*/
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ParameterDynamicValue{T,T1}"/> class.
        /// </summary>
        /// <param name="param1">The param1.</param>
        /// <param name="update">The update.</param>
        public ParameterDynamicValue1(ParameterKey<T1> param1, ParameterUpdateDelegate1<TCast1, TCast> update, bool autoCheckDependencies)
        {
            AutoCheckDependencies = autoCheckDependencies;
            Dependencies = new ParameterKey[] { param1, };
            Update = update;
        }


        /// <summary>
        /// 
        /// </summary>
        public ParameterUpdateDelegate1<TCast1, TCast> Update { get; private set; }

        internal override Delegate SourceDelegate { get { return Update; } }

        /// <summary>
        /// Gets the value.
        /// </summary>
        /// <typeparam name="TValue">The type of the value.</typeparam>
        /// <returns></returns>
        internal override void GetValue(ParameterCollection.InternalValue result)
        {
            //var temp1 = *Framework.Utilities.Cast<TCast1>((byte*)parameters[0].Value.Data);
            //var temp1 = ((ParameterCollection.InternalValue<TCast1>)parameters[0].Value).Value;
            //Update(ref temp1, ref ((ParameterCollection.InternalValue<TCast>)result).Value);

            var parameters = result.Dependencies;
            Update(ref ((ParameterCollection.InternalValueBase<TCast1>)parameters[0].Entry).Value, ref ((ParameterCollection.InternalValueBase<TCast>)result).Value);
        }
    }
    /// <summary>
    /// Describes a dynamic value with 2 inputs.
    /// </summary>
    /// <typeparam name="T"></typeparam>
    /// <typeparam name="T1">The type of the 1.</typeparam>
    internal class ParameterDynamicValue2<T, T1, T2, TCast, TCast1, TCast2> : ParameterDynamicValue<T> 
/*        where T : struct 
        where TCast : struct
        where T1 : struct
        where TCast1 : struct
        where T2 : struct
        where TCast2 : struct
*/
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ParameterDynamicValue{T,T1}"/> class.
        /// </summary>
        /// <param name="param1">The param1.</param>
        /// <param name="update">The update.</param>
        public ParameterDynamicValue2(ParameterKey<T1> param1, ParameterKey<T2> param2, ParameterUpdateDelegate2<TCast1, TCast2, TCast> update, bool autoCheckDependencies)
        {
            AutoCheckDependencies = autoCheckDependencies;
            Dependencies = new ParameterKey[] { param1, param2, };
            Update = update;
        }


        /// <summary>
        /// 
        /// </summary>
        public ParameterUpdateDelegate2<TCast1, TCast2, TCast> Update { get; private set; }

        internal override Delegate SourceDelegate { get { return Update; } }

        /// <summary>
        /// Gets the value.
        /// </summary>
        /// <typeparam name="TValue">The type of the value.</typeparam>
        /// <returns></returns>
        internal override void GetValue(ParameterCollection.InternalValue result)
        {
            //var temp1 = *Framework.Utilities.Cast<TCast1>((byte*)parameters[0].Value.Data);
            //var temp1 = ((ParameterCollection.InternalValue<TCast1>)parameters[0].Value).Value;
            //var temp2 = *Framework.Utilities.Cast<TCast2>((byte*)parameters[1].Value.Data);
            //var temp2 = ((ParameterCollection.InternalValue<TCast2>)parameters[1].Value).Value;
            //Update(ref temp1, ref temp2, ref ((ParameterCollection.InternalValue<TCast>)result).Value);

            var parameters = result.Dependencies;
            Update(ref ((ParameterCollection.InternalValueBase<TCast1>)parameters[0].Entry).Value, ref ((ParameterCollection.InternalValueBase<TCast2>)parameters[1].Entry).Value, ref ((ParameterCollection.InternalValueBase<TCast>)result).Value);
        }
    }
    /// <summary>
    /// Describes a dynamic value with 3 inputs.
    /// </summary>
    /// <typeparam name="T"></typeparam>
    /// <typeparam name="T1">The type of the 1.</typeparam>
    internal class ParameterDynamicValue3<T, T1, T2, T3, TCast, TCast1, TCast2, TCast3> : ParameterDynamicValue<T> 
/*        where T : struct 
        where TCast : struct
        where T1 : struct
        where TCast1 : struct
        where T2 : struct
        where TCast2 : struct
        where T3 : struct
        where TCast3 : struct
*/
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ParameterDynamicValue{T,T1}"/> class.
        /// </summary>
        /// <param name="param1">The param1.</param>
        /// <param name="update">The update.</param>
        public ParameterDynamicValue3(ParameterKey<T1> param1, ParameterKey<T2> param2, ParameterKey<T3> param3, ParameterUpdateDelegate3<TCast1, TCast2, TCast3, TCast> update, bool autoCheckDependencies)
        {
            AutoCheckDependencies = autoCheckDependencies;
            Dependencies = new ParameterKey[] { param1, param2, param3, };
            Update = update;
        }


        /// <summary>
        /// 
        /// </summary>
        public ParameterUpdateDelegate3<TCast1, TCast2, TCast3, TCast> Update { get; private set; }

        internal override Delegate SourceDelegate { get { return Update; } }

        /// <summary>
        /// Gets the value.
        /// </summary>
        /// <typeparam name="TValue">The type of the value.</typeparam>
        /// <returns></returns>
        internal override void GetValue(ParameterCollection.InternalValue result)
        {
            //var temp1 = *Framework.Utilities.Cast<TCast1>((byte*)parameters[0].Value.Data);
            //var temp1 = ((ParameterCollection.InternalValue<TCast1>)parameters[0].Value).Value;
            //var temp2 = *Framework.Utilities.Cast<TCast2>((byte*)parameters[1].Value.Data);
            //var temp2 = ((ParameterCollection.InternalValue<TCast2>)parameters[1].Value).Value;
            //var temp3 = *Framework.Utilities.Cast<TCast3>((byte*)parameters[2].Value.Data);
            //var temp3 = ((ParameterCollection.InternalValue<TCast3>)parameters[2].Value).Value;
            //Update(ref temp1, ref temp2, ref temp3, ref ((ParameterCollection.InternalValue<TCast>)result).Value);

            var parameters = result.Dependencies;
            Update(ref ((ParameterCollection.InternalValueBase<TCast1>)parameters[0].Entry).Value, ref ((ParameterCollection.InternalValueBase<TCast2>)parameters[1].Entry).Value, ref ((ParameterCollection.InternalValueBase<TCast3>)parameters[2].Entry).Value, ref ((ParameterCollection.InternalValueBase<TCast>)result).Value);
        }
    }
    /// <summary>
    /// Describes a dynamic value with 4 inputs.
    /// </summary>
    /// <typeparam name="T"></typeparam>
    /// <typeparam name="T1">The type of the 1.</typeparam>
    internal class ParameterDynamicValue4<T, T1, T2, T3, T4, TCast, TCast1, TCast2, TCast3, TCast4> : ParameterDynamicValue<T> 
/*        where T : struct 
        where TCast : struct
        where T1 : struct
        where TCast1 : struct
        where T2 : struct
        where TCast2 : struct
        where T3 : struct
        where TCast3 : struct
        where T4 : struct
        where TCast4 : struct
*/
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ParameterDynamicValue{T,T1}"/> class.
        /// </summary>
        /// <param name="param1">The param1.</param>
        /// <param name="update">The update.</param>
        public ParameterDynamicValue4(ParameterKey<T1> param1, ParameterKey<T2> param2, ParameterKey<T3> param3, ParameterKey<T4> param4, ParameterUpdateDelegate4<TCast1, TCast2, TCast3, TCast4, TCast> update, bool autoCheckDependencies)
        {
            AutoCheckDependencies = autoCheckDependencies;
            Dependencies = new ParameterKey[] { param1, param2, param3, param4, };
            Update = update;
        }


        /// <summary>
        /// 
        /// </summary>
        public ParameterUpdateDelegate4<TCast1, TCast2, TCast3, TCast4, TCast> Update { get; private set; }

        internal override Delegate SourceDelegate { get { return Update; } }

        /// <summary>
        /// Gets the value.
        /// </summary>
        /// <typeparam name="TValue">The type of the value.</typeparam>
        /// <returns></returns>
        internal override void GetValue(ParameterCollection.InternalValue result)
        {
            //var temp1 = *Framework.Utilities.Cast<TCast1>((byte*)parameters[0].Value.Data);
            //var temp1 = ((ParameterCollection.InternalValue<TCast1>)parameters[0].Value).Value;
            //var temp2 = *Framework.Utilities.Cast<TCast2>((byte*)parameters[1].Value.Data);
            //var temp2 = ((ParameterCollection.InternalValue<TCast2>)parameters[1].Value).Value;
            //var temp3 = *Framework.Utilities.Cast<TCast3>((byte*)parameters[2].Value.Data);
            //var temp3 = ((ParameterCollection.InternalValue<TCast3>)parameters[2].Value).Value;
            //var temp4 = *Framework.Utilities.Cast<TCast4>((byte*)parameters[3].Value.Data);
            //var temp4 = ((ParameterCollection.InternalValue<TCast4>)parameters[3].Value).Value;
            //Update(ref temp1, ref temp2, ref temp3, ref temp4, ref ((ParameterCollection.InternalValue<TCast>)result).Value);

            var parameters = result.Dependencies;
            Update(ref ((ParameterCollection.InternalValueBase<TCast1>)parameters[0].Entry).Value, ref ((ParameterCollection.InternalValueBase<TCast2>)parameters[1].Entry).Value, ref ((ParameterCollection.InternalValueBase<TCast3>)parameters[2].Entry).Value, ref ((ParameterCollection.InternalValueBase<TCast4>)parameters[3].Entry).Value, ref ((ParameterCollection.InternalValueBase<TCast>)result).Value);
        }
    }
    /// <summary>
    /// Describes a dynamic value with 5 inputs.
    /// </summary>
    /// <typeparam name="T"></typeparam>
    /// <typeparam name="T1">The type of the 1.</typeparam>
    internal class ParameterDynamicValue5<T, T1, T2, T3, T4, T5, TCast, TCast1, TCast2, TCast3, TCast4, TCast5> : ParameterDynamicValue<T> 
/*        where T : struct 
        where TCast : struct
        where T1 : struct
        where TCast1 : struct
        where T2 : struct
        where TCast2 : struct
        where T3 : struct
        where TCast3 : struct
        where T4 : struct
        where TCast4 : struct
        where T5 : struct
        where TCast5 : struct
*/
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ParameterDynamicValue{T,T1}"/> class.
        /// </summary>
        /// <param name="param1">The param1.</param>
        /// <param name="update">The update.</param>
        public ParameterDynamicValue5(ParameterKey<T1> param1, ParameterKey<T2> param2, ParameterKey<T3> param3, ParameterKey<T4> param4, ParameterKey<T5> param5, ParameterUpdateDelegate5<TCast1, TCast2, TCast3, TCast4, TCast5, TCast> update, bool autoCheckDependencies)
        {
            AutoCheckDependencies = autoCheckDependencies;
            Dependencies = new ParameterKey[] { param1, param2, param3, param4, param5, };
            Update = update;
        }


        /// <summary>
        /// 
        /// </summary>
        public ParameterUpdateDelegate5<TCast1, TCast2, TCast3, TCast4, TCast5, TCast> Update { get; private set; }

        internal override Delegate SourceDelegate { get { return Update; } }

        /// <summary>
        /// Gets the value.
        /// </summary>
        /// <typeparam name="TValue">The type of the value.</typeparam>
        /// <returns></returns>
        internal override void GetValue(ParameterCollection.InternalValue result)
        {
            //var temp1 = *Framework.Utilities.Cast<TCast1>((byte*)parameters[0].Value.Data);
            //var temp1 = ((ParameterCollection.InternalValue<TCast1>)parameters[0].Value).Value;
            //var temp2 = *Framework.Utilities.Cast<TCast2>((byte*)parameters[1].Value.Data);
            //var temp2 = ((ParameterCollection.InternalValue<TCast2>)parameters[1].Value).Value;
            //var temp3 = *Framework.Utilities.Cast<TCast3>((byte*)parameters[2].Value.Data);
            //var temp3 = ((ParameterCollection.InternalValue<TCast3>)parameters[2].Value).Value;
            //var temp4 = *Framework.Utilities.Cast<TCast4>((byte*)parameters[3].Value.Data);
            //var temp4 = ((ParameterCollection.InternalValue<TCast4>)parameters[3].Value).Value;
            //var temp5 = *Framework.Utilities.Cast<TCast5>((byte*)parameters[4].Value.Data);
            //var temp5 = ((ParameterCollection.InternalValue<TCast5>)parameters[4].Value).Value;
            //Update(ref temp1, ref temp2, ref temp3, ref temp4, ref temp5, ref ((ParameterCollection.InternalValue<TCast>)result).Value);

            var parameters = result.Dependencies;
            Update(ref ((ParameterCollection.InternalValueBase<TCast1>)parameters[0].Entry).Value, ref ((ParameterCollection.InternalValueBase<TCast2>)parameters[1].Entry).Value, ref ((ParameterCollection.InternalValueBase<TCast3>)parameters[2].Entry).Value, ref ((ParameterCollection.InternalValueBase<TCast4>)parameters[3].Entry).Value, ref ((ParameterCollection.InternalValueBase<TCast5>)parameters[4].Entry).Value, ref ((ParameterCollection.InternalValueBase<TCast>)result).Value);
        }
    }
    /// <summary>
    /// Describes a dynamic value with 6 inputs.
    /// </summary>
    /// <typeparam name="T"></typeparam>
    /// <typeparam name="T1">The type of the 1.</typeparam>
    internal class ParameterDynamicValue6<T, T1, T2, T3, T4, T5, T6, TCast, TCast1, TCast2, TCast3, TCast4, TCast5, TCast6> : ParameterDynamicValue<T> 
/*        where T : struct 
        where TCast : struct
        where T1 : struct
        where TCast1 : struct
        where T2 : struct
        where TCast2 : struct
        where T3 : struct
        where TCast3 : struct
        where T4 : struct
        where TCast4 : struct
        where T5 : struct
        where TCast5 : struct
        where T6 : struct
        where TCast6 : struct
*/
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ParameterDynamicValue{T,T1}"/> class.
        /// </summary>
        /// <param name="param1">The param1.</param>
        /// <param name="update">The update.</param>
        public ParameterDynamicValue6(ParameterKey<T1> param1, ParameterKey<T2> param2, ParameterKey<T3> param3, ParameterKey<T4> param4, ParameterKey<T5> param5, ParameterKey<T6> param6, ParameterUpdateDelegate6<TCast1, TCast2, TCast3, TCast4, TCast5, TCast6, TCast> update, bool autoCheckDependencies)
        {
            AutoCheckDependencies = autoCheckDependencies;
            Dependencies = new ParameterKey[] { param1, param2, param3, param4, param5, param6, };
            Update = update;
        }


        /// <summary>
        /// 
        /// </summary>
        public ParameterUpdateDelegate6<TCast1, TCast2, TCast3, TCast4, TCast5, TCast6, TCast> Update { get; private set; }

        internal override Delegate SourceDelegate { get { return Update; } }

        /// <summary>
        /// Gets the value.
        /// </summary>
        /// <typeparam name="TValue">The type of the value.</typeparam>
        /// <returns></returns>
        internal override void GetValue(ParameterCollection.InternalValue result)
        {
            //var temp1 = *Framework.Utilities.Cast<TCast1>((byte*)parameters[0].Value.Data);
            //var temp1 = ((ParameterCollection.InternalValue<TCast1>)parameters[0].Value).Value;
            //var temp2 = *Framework.Utilities.Cast<TCast2>((byte*)parameters[1].Value.Data);
            //var temp2 = ((ParameterCollection.InternalValue<TCast2>)parameters[1].Value).Value;
            //var temp3 = *Framework.Utilities.Cast<TCast3>((byte*)parameters[2].Value.Data);
            //var temp3 = ((ParameterCollection.InternalValue<TCast3>)parameters[2].Value).Value;
            //var temp4 = *Framework.Utilities.Cast<TCast4>((byte*)parameters[3].Value.Data);
            //var temp4 = ((ParameterCollection.InternalValue<TCast4>)parameters[3].Value).Value;
            //var temp5 = *Framework.Utilities.Cast<TCast5>((byte*)parameters[4].Value.Data);
            //var temp5 = ((ParameterCollection.InternalValue<TCast5>)parameters[4].Value).Value;
            //var temp6 = *Framework.Utilities.Cast<TCast6>((byte*)parameters[5].Value.Data);
            //var temp6 = ((ParameterCollection.InternalValue<TCast6>)parameters[5].Value).Value;
            //Update(ref temp1, ref temp2, ref temp3, ref temp4, ref temp5, ref temp6, ref ((ParameterCollection.InternalValue<TCast>)result).Value);

            var parameters = result.Dependencies;
            Update(ref ((ParameterCollection.InternalValueBase<TCast1>)parameters[0].Entry).Value, ref ((ParameterCollection.InternalValueBase<TCast2>)parameters[1].Entry).Value, ref ((ParameterCollection.InternalValueBase<TCast3>)parameters[2].Entry).Value, ref ((ParameterCollection.InternalValueBase<TCast4>)parameters[3].Entry).Value, ref ((ParameterCollection.InternalValueBase<TCast5>)parameters[4].Entry).Value, ref ((ParameterCollection.InternalValueBase<TCast6>)parameters[5].Entry).Value, ref ((ParameterCollection.InternalValueBase<TCast>)result).Value);
        }
    }
}
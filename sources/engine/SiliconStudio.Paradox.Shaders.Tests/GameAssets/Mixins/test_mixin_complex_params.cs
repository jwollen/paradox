// <auto-generated>
// Do not edit this file yourself!
//
// This code was generated by Paradox Shader Mixin Code Generator.
// To generate it yourself, please install SiliconStudio.Paradox.VisualStudio.Package .vsix
// and re-save the associated .pdxfx.
// </auto-generated>

using System;
using SiliconStudio.Core;
using SiliconStudio.Paradox.Rendering;
using SiliconStudio.Paradox.Graphics;
using SiliconStudio.Paradox.Shaders;
using SiliconStudio.Core.Mathematics;
using Buffer = SiliconStudio.Paradox.Graphics.Buffer;

namespace Test1
{
    [DataContract]public partial class SubParameters : ShaderMixinParameters
    {
        public static readonly ParameterKey<bool> param1 = ParameterKeys.New<bool>();
        public static readonly ParameterKey<int> param2 = ParameterKeys.New<int>(1);
        public static readonly ParameterKey<string> param3 = ParameterKeys.New<string>("ok");
    };
    [DataContract]public partial class TestParameters : ShaderMixinParameters
    {
        public static readonly ParameterKey<SubParameters> subParam1 = ParameterKeys.New<SubParameters>();
        public static readonly ParameterKey<SubParameters[]> subParameters = ParameterKeys.New<SubParameters[]>();
    };
    internal static partial class ShaderMixins
    {
        internal partial class DefaultComplexParams  : IShaderMixinBuilder
        {
            public void Generate(ShaderMixinSource mixin, ShaderMixinContext context)
            {
                context.Mixin(mixin, "A");
                context.Mixin(mixin, "B");
                context.Mixin(mixin, "C");
                int x = 1;
                foreach(var ____1 in context.GetParam(TestParameters.subParameters))

                {
                    context.PushParameters(____1);
                    if (context.GetParam(SubParameters.param1))
                    {
                        context.Mixin(mixin, "C" + x);
                    }
                    x++;
                    context.PopParameters();
                }

                {
                    context.PushParameters(context.GetParam(TestParameters.subParam1));
                    if (context.GetParam(SubParameters.param2) == 1)
                    {
                        context.Mixin(mixin, "D");
                    }
                    context.PopParameters();
                }
            }

            [ModuleInitializer]
            internal static void __Initialize__()

            {
                ShaderMixinManager.Register("DefaultComplexParams", new DefaultComplexParams());
            }
        }
    }
}

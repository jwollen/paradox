// Copyright (c) 2014 Silicon Studio Corp. (http://siliconstudio.co.jp)
// This file is distributed under GPL v3. See LICENSE.md for details.
class PhysicsDebugEffect : ShaderBase
{
	// -------------------------------------
	// streams
	// -------------------------------------
	stage stream float4 Position    : POSITION;
	stage stream float4 TexCoord    : TEXCOORD;

	// -------------------------------------
	// uniforms
	// -------------------------------------
	// A general transformation matrix
	stage float4x4 WorldViewProj;
		
	// -------------------------------------
	// VertexShader
	// -------------------------------------
	stage override void VSMain()
	{
		streams.ShadingPosition = mul(streams.Position, WorldViewProj);
	}

	// Color used to tint the sprite
	[Color]
	stage float4 Color = float4(1,1,1,1);

	stage float UseUv = 1.0f;

	//http://www.gamedev.net/topic/529926-terrain-contour-lines-using-pixel-shader/

	// Shading of the sprite
	stage override void PSMain()
	{
		float3 f  = frac(streams.Position.xyz * 1.0);
		float3 df = fwidth(streams.Position.xyz * 1.0);
		float3 g = smoothstep(df * 1.0, df * 2.0, f);
		float c = g.x * g.y * g.z;

		float uvEdge = 0.0;
		if(UseUv > 0.5 && streams.TexCoord.x < 0.02 || streams.TexCoord.y < 0.02 || streams.TexCoord.x > 0.98 || streams.TexCoord.y > 0.98)
		{
			uvEdge = 1.0;
		}

        if(c > 0.1f && uvEdge == 0.0)
        {
            discard;
        }

		streams.ColorTarget = float4(Color.rgb, 1.0);
	}
};
